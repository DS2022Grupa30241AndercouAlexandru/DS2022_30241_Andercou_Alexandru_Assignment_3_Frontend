{"ast":null,"code":"// source: ichat.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\n\nvar global = function () {\n  return this || window || global || self || Function('return this')();\n}.call(null);\n\ngoog.exportSymbol('proto.EmptyMessage', null, global);\ngoog.exportSymbol('proto.ForDeletion', null, global);\ngoog.exportSymbol('proto.Message', null, global);\ngoog.exportSymbol('proto.Normal', null, global);\ngoog.exportSymbol('proto.Normal2', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.Normal = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Normal, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Normal.displayName = 'proto.Normal';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.ForDeletion = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.ForDeletion, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ForDeletion.displayName = 'proto.ForDeletion';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Normal2 = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Normal2, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Normal2.displayName = 'proto.Normal2';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.Message = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.Message, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Message.displayName = 'proto.Message';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.EmptyMessage = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.EmptyMessage, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EmptyMessage.displayName = 'proto.EmptyMessage';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Normal.prototype.toObject = function (opt_includeInstance) {\n    return proto.Normal.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Normal} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Normal.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      from: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      to: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      type: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Normal}\n */\n\n\nproto.Normal.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Normal();\n  return proto.Normal.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Normal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Normal}\n */\n\n\nproto.Normal.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setFrom(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTo(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Normal.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Normal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Normal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Normal.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = message.getTo();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getType();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional int64 from = 1;\n * @return {number}\n */\n\n\nproto.Normal.prototype.getFrom = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Normal} returns this\n */\n\n\nproto.Normal.prototype.setFrom = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int64 to = 2;\n * @return {number}\n */\n\n\nproto.Normal.prototype.getTo = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Normal} returns this\n */\n\n\nproto.Normal.prototype.setTo = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional string type = 3;\n * @return {string}\n */\n\n\nproto.Normal.prototype.getType = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Normal} returns this\n */\n\n\nproto.Normal.prototype.setType = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.ForDeletion.prototype.toObject = function (opt_includeInstance) {\n    return proto.ForDeletion.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.ForDeletion} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.ForDeletion.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      messageid: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ForDeletion}\n */\n\n\nproto.ForDeletion.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ForDeletion();\n  return proto.ForDeletion.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ForDeletion} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ForDeletion}\n */\n\n\nproto.ForDeletion.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setMessageid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.ForDeletion.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.ForDeletion.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ForDeletion} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.ForDeletion.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMessageid();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n};\n/**\n * optional int64 messageId = 1;\n * @return {number}\n */\n\n\nproto.ForDeletion.prototype.getMessageid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.ForDeletion} returns this\n */\n\n\nproto.ForDeletion.prototype.setMessageid = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Normal2.prototype.toObject = function (opt_includeInstance) {\n    return proto.Normal2.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Normal2} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Normal2.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      from: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      to: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      messagetosend: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      type: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Normal2}\n */\n\n\nproto.Normal2.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Normal2();\n  return proto.Normal2.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Normal2} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Normal2}\n */\n\n\nproto.Normal2.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setFrom(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTo(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMessagetosend(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setType(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Normal2.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Normal2.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Normal2} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Normal2.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n\n  if (f !== 0) {\n    writer.writeInt64(1, f);\n  }\n\n  f = message.getTo();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getMessagetosend();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getType();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional int64 from = 1;\n * @return {number}\n */\n\n\nproto.Normal2.prototype.getFrom = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Normal2} returns this\n */\n\n\nproto.Normal2.prototype.setFrom = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional int64 to = 2;\n * @return {number}\n */\n\n\nproto.Normal2.prototype.getTo = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Normal2} returns this\n */\n\n\nproto.Normal2.prototype.setTo = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional string messageToSend = 3;\n * @return {string}\n */\n\n\nproto.Normal2.prototype.getMessagetosend = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Normal2} returns this\n */\n\n\nproto.Normal2.prototype.setMessagetosend = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string type = 4;\n * @return {string}\n */\n\n\nproto.Normal2.prototype.getType = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Normal2} returns this\n */\n\n\nproto.Normal2.prototype.setType = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.Message.prototype.toObject = function (opt_includeInstance) {\n    return proto.Message.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.Message} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.Message.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      messagetosend: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      type: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      id: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Message}\n */\n\n\nproto.Message.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Message();\n  return proto.Message.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Message} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Message}\n */\n\n\nproto.Message.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMessagetosend(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setType(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.Message.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.Message.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Message} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.Message.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMessagetosend();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getType();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getId();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n};\n/**\n * optional string messageToSend = 1;\n * @return {string}\n */\n\n\nproto.Message.prototype.getMessagetosend = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Message} returns this\n */\n\n\nproto.Message.prototype.setMessagetosend = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string type = 2;\n * @return {string}\n */\n\n\nproto.Message.prototype.getType = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.Message} returns this\n */\n\n\nproto.Message.prototype.setType = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional int64 id = 3;\n * @return {number}\n */\n\n\nproto.Message.prototype.getId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.Message} returns this\n */\n\n\nproto.Message.prototype.setId = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.EmptyMessage.prototype.toObject = function (opt_includeInstance) {\n    return proto.EmptyMessage.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.EmptyMessage} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.EmptyMessage.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EmptyMessage}\n */\n\n\nproto.EmptyMessage.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EmptyMessage();\n  return proto.EmptyMessage.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EmptyMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EmptyMessage}\n */\n\n\nproto.EmptyMessage.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.EmptyMessage.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.EmptyMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EmptyMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.EmptyMessage.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\ngoog.object.extend(exports, proto);","map":{"version":3,"names":["jspb","require","goog","global","window","self","Function","call","exportSymbol","proto","Normal","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","ForDeletion","Normal2","EmptyMessage","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","from","getFieldWithDefault","to","type","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readInt64","setFrom","setTo","readString","setType","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getFrom","writeInt64","getTo","getType","length","writeString","setProto3IntField","setProto3StringField","messageid","setMessageid","getMessageid","messagetosend","setMessagetosend","getMessagetosend","id","setId","getId","object","extend","exports"],"sources":["C:/Users/Alexandru Andercou/Desktop/A3/SD_FRONTEND/energy-utility-platform_angular3/src/grpc/generated/ichat_pb.js"],"sourcesContent":["// source: ichat.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() { return this || window || global || self || Function('return this')(); }).call(null);\n\ngoog.exportSymbol('proto.EmptyMessage', null, global);\ngoog.exportSymbol('proto.ForDeletion', null, global);\ngoog.exportSymbol('proto.Message', null, global);\ngoog.exportSymbol('proto.Normal', null, global);\ngoog.exportSymbol('proto.Normal2', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Normal = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Normal, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Normal.displayName = 'proto.Normal';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ForDeletion = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ForDeletion, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ForDeletion.displayName = 'proto.ForDeletion';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Normal2 = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Normal2, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Normal2.displayName = 'proto.Normal2';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Message = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Message, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Message.displayName = 'proto.Message';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EmptyMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.EmptyMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EmptyMessage.displayName = 'proto.EmptyMessage';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Normal.prototype.toObject = function(opt_includeInstance) {\n  return proto.Normal.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Normal} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Normal.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    to: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    type: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Normal}\n */\nproto.Normal.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Normal;\n  return proto.Normal.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Normal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Normal}\n */\nproto.Normal.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Normal.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Normal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Normal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Normal.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getTo();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 from = 1;\n * @return {number}\n */\nproto.Normal.prototype.getFrom = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Normal} returns this\n */\nproto.Normal.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 to = 2;\n * @return {number}\n */\nproto.Normal.prototype.getTo = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Normal} returns this\n */\nproto.Normal.prototype.setTo = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.Normal.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Normal} returns this\n */\nproto.Normal.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ForDeletion.prototype.toObject = function(opt_includeInstance) {\n  return proto.ForDeletion.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ForDeletion} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ForDeletion.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    messageid: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ForDeletion}\n */\nproto.ForDeletion.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ForDeletion;\n  return proto.ForDeletion.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ForDeletion} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ForDeletion}\n */\nproto.ForDeletion.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMessageid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ForDeletion.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ForDeletion.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ForDeletion} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ForDeletion.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessageid();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 messageId = 1;\n * @return {number}\n */\nproto.ForDeletion.prototype.getMessageid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ForDeletion} returns this\n */\nproto.ForDeletion.prototype.setMessageid = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Normal2.prototype.toObject = function(opt_includeInstance) {\n  return proto.Normal2.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Normal2} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Normal2.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    to: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    messagetosend: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Normal2}\n */\nproto.Normal2.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Normal2;\n  return proto.Normal2.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Normal2} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Normal2}\n */\nproto.Normal2.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessagetosend(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Normal2.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Normal2.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Normal2} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Normal2.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getTo();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getMessagetosend();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 from = 1;\n * @return {number}\n */\nproto.Normal2.prototype.getFrom = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Normal2} returns this\n */\nproto.Normal2.prototype.setFrom = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 to = 2;\n * @return {number}\n */\nproto.Normal2.prototype.getTo = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Normal2} returns this\n */\nproto.Normal2.prototype.setTo = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string messageToSend = 3;\n * @return {string}\n */\nproto.Normal2.prototype.getMessagetosend = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Normal2} returns this\n */\nproto.Normal2.prototype.setMessagetosend = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string type = 4;\n * @return {string}\n */\nproto.Normal2.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Normal2} returns this\n */\nproto.Normal2.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Message.prototype.toObject = function(opt_includeInstance) {\n  return proto.Message.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Message} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Message.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    messagetosend: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    id: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Message}\n */\nproto.Message.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Message;\n  return proto.Message.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Message} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Message}\n */\nproto.Message.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessagetosend(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Message.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Message.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Message} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Message.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessagetosend();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getId();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string messageToSend = 1;\n * @return {string}\n */\nproto.Message.prototype.getMessagetosend = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Message} returns this\n */\nproto.Message.prototype.setMessagetosend = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string type = 2;\n * @return {string}\n */\nproto.Message.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.Message} returns this\n */\nproto.Message.prototype.setType = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int64 id = 3;\n * @return {number}\n */\nproto.Message.prototype.getId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.Message} returns this\n */\nproto.Message.prototype.setId = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EmptyMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.EmptyMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EmptyMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EmptyMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EmptyMessage}\n */\nproto.EmptyMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EmptyMessage;\n  return proto.EmptyMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EmptyMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EmptyMessage}\n */\nproto.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EmptyMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EmptyMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EmptyMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EmptyMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}